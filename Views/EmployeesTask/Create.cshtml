@model DemoWeb.Models.EmployeeTask

@{

    ViewData["Title"] = "Assign Task";
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>

     function loadTaskPage(page) {
        var searchQuery = $("#taskSearch").val();
        
        $.ajax({
            url: '@Url.Action("GetTaskList", "EmployeesTask")',
            data: { page: page, search: searchQuery }
        })
            .done(function (data) {
                $("#taskListContainer").html(data); // Update the task list section
            })
            .fail(function (xhr) {
                console.error("Failed to load tasks", xhr);
            })
            .always(function () {
                console.log("Task list load attempt complete");
            });

    }

    $(document).ready(function () {
     
        // Search filter functionality
        $("#taskSearch").on("input", function () {
            var searchQuery = $(this).val().toLowerCase();

            // Loop through each task item and toggle visibility based on search query
            $("#taskList .task-item").each(function () {
                var taskTitle = $(this).find(".form-check-label").text().toLowerCase();

                if (taskTitle.includes(searchQuery)) {
                    $(this).show();  // Show the task item if it matches
                } else {
                    $(this).hide();  // Hide the task item and accordion if it doesn't match
                }
            });
        });

        loadTaskPage(1); // Reload tasks on new search input

        // On clicking the Create button
        $('#btnCreate').click(function (e) {
            e.preventDefault(); // Prevent default form submission

            // Get anti-forgery token
            var token = $("input[name='__RequestVerificationToken']").val();

            var selectedTasks = [];
            $("#taskListContainer input[name='TaskList']:checked").each(function () {
                selectedTasks.push($(this).val());
            });

            // Collect form data, including the RequestVerificationToken
            const data = {
                _RequestVerificationToken: token,
                EmployeeId: $('#EmployeeId').val(),
                TaskListId: selectedTasks, // Pass selected task IDs as an array
            
                DueDate: $('#DueDate').val(),
            };

             // Use the helper function for the AJAX request
            const url = '@Url.Action("Create", "EmployeesTask")';
            sendAjaxRequest(url, data, token);
        });
    });
</script>




<div class="container">
    <div class="row justify-content-center flex align-items-center">
        <div class="col-md-6 col-lg-5">
            <form class="bg-white p-4 border rounded shadow">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <!-- Employee Name -->
                <div class="form-group mb-3">
                    <label asp-for="EmployeeId" class="form-label"></label>
                    <select asp-for="EmployeeId" asp-items="Model.EmployeesList" class="form-select">
                        <option value="">Select Employee</option>
                    </select>
                    <span asp-validation-for="EmployeeId" class="text-danger"></span>
                </div>

                <!-- Task Search and Paginated List Container -->
                <div class="form-group mb-3">
                    <label asp-for="TaskId" class="form-label"></label>

                    <!-- Task Search Input -->
                    <input type="text" id="taskSearch" placeholder="Search tasks..." class="form-control mb-3" />

                    <!-- Container for Task List Partial View -->
                    <div id="taskListContainer">
                        <!-- This will load the task list partial view dynamically -->
                    </div>

                    <span asp-validation-for="TaskId" class="text-danger"></span>
                </div>

                

                 <div class="form-group mb-3">
                    <label asp-for="DueDate" class="form-label"></label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                        <input asp-for="DueDate" class="form-control" asp-format="{0:dd/MM/yyyy}" />
                    </div>
                    <span asp-validation-for="DueDate" class="text-danger"></span>
                </div>

                <!-- Submit Button -->
                <div class="d-grid">
                    <input type="submit" id="btnCreate" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}